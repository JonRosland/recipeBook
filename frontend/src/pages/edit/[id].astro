---
import Layout from "../../layouts/Layout.astro";
import RecipeInformation from "../../components/RecipeInformation.svelte";
import IngredientEditor from "../../components/IngredientEditor.svelte";
import StepsEditor from "../../components/StepsEditor.svelte";
import NotesEditor from "../../components/NotesEditor.svelte";
import SaveButton from "../../components/SaveButton.svelte";
import { getRecipeApi } from "../../components/APIFunctions.js";

// Get recipe ID from URL
const { id } = Astro.params;

// Fetch recipe data
let recipe = await getRecipeApi(id).catch((error) => {
    console.error("Error fetching recipe:", error);
    return null;
});

// Redirect if recipe not found
if (!recipe) {
    return Astro.redirect("/");
}
---

<Layout title={`Rediger ${recipe.recipeName}`}>
    <div class="container">
        <header class="recipe-header">
            <a href={`/recipe/${id}`} class="back-button" aria-label="Go back">
                <svg
                    class="back-icon"
                    viewBox="0 0 24 24"
                    stroke="var(--icon-color)"
                    stroke-width="2"
                    fill="none"
                >
                    <path d="M15 6l-6 6 6 6"></path>
                </svg>
            </a>
            <h1 class="recipe-title">Rediger Oppskrift</h1>
        </header>

        <div class="editor-layout">
            <!-- First row on desktop: Information and Notes -->
            <div class="editor-row info-notes-row">
                <div class="editor-section info-section">
                    <RecipeInformation client:load recipeData={recipe} />
                </div>

                <div class="editor-section notes-section">
                    <NotesEditor client:load notes={recipe.notes} />
                </div>
            </div>

            <!-- Second row on desktop: Ingredients and Steps -->
            <div class="editor-row ingredients-steps-row">
                <div class="editor-section ingredients-section">
                    <IngredientEditor client:load ingredients={recipe.ingredients} />
                </div>

                <div class="editor-section steps-section">
                    <StepsEditor client:load steps={recipe.steps} />
                </div>
            </div>
        </div>

        <!-- Save Button -->
        <SaveButton client:load isNewRecipe={false} recipeId={id} />
    </div>
</Layout>

<style>
    .container {
        max-width: 640px;
        margin: 0 auto;
        padding: var(--spacing-lg);
    }

    .recipe-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: var(--spacing-xxl);
        padding: var(--spacing-sm) 0;
    }

    .recipe-title {
        font-size: 36px;
        font-weight: 500;
        text-align: center;
        flex-grow: 1;
    }

    .back-button {
        background: none;
        border: none;
        cursor: pointer;
        padding: var(--spacing-sm);
        text-decoration: none;
    }

    .back-icon {
        width: 32px;
        height: 32px;
    }
    
    /* On mobile, everything is stacked */
    .editor-layout {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-lg);
    }
    
    .editor-row {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-lg);
    }
    
    /* Desktop layout */
    @media (min-width: 1024px) {
        .container {
            max-width: 1200px;
        }
        
        .editor-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: var(--spacing-xl);
        }
        
        .info-notes-row, .ingredients-steps-row {
            margin-bottom: var(--spacing-xl);
        }
    }
</style>