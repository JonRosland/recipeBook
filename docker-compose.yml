services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: RecipeDB
    ports:
      - "27017:27017"
    networks:
      - mongonet
    volumes:
      - ./mongodb/mongo-data:/data/db
      - ./mongodb/mongo-config:/data/configdb

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    # restart: on-failure
    #depends_on:
    #  - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    ports:
      - "8081:8081"
    networks:
      - mongonet

  #  backend:
  #    container_name: backend
  #    image: jonro/recipebook:backend
  #    ports:
  #      - '6088:6088'
  #    stop_signal: SIGINT
  #    environment:
  #      DB_HOST: 10.0.0.21
  #      DB_PORT: 27017
  #      DB_USER: root
  #      DB_PASS: root
  #    networks:
  #      - mongonet

  #  backend:
  #    container_name: backend
  #    build:
  #      context: backend
  #      target: builder
  #    ports:
  #      - '4000:4000'
  #    stop_signal: SIGINT
  #    networks:
  #      - mongonet
  #    #depends_on:
  #    #  - mongo

  #  frontend:
  #    container_name: frontend
  #    build:
  #      context: frontend
  #    ports:
  #      - '4321:4321'
  #    networks:
  #      - mongonet
  frontend:
    container_name: frontend
    image: jonro/recipebook:frontend
    ports:
      - '8085:8085'
    stop_signal: SIGINT
#    networks:
#      - mongonet
#  recipe-book:
#    container_name: recipe-book
#    image: user/recipe-book:v1.0
#    #build:
#    #  context: .
#    #  dockerfile: Dockerfile
#    ports:
#      - '4000:4000'
#      - '4321:4321'
#    stop_signal: SIGINT
#    networks:
#      - mongonet

networks:
  #  traefik-proxy:
  #    external: true
  mongonet:
    name: mongonet
    driver: bridge
